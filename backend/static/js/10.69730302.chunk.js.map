{"version":3,"sources":["assets/images/calendar.svg","selectors/activities-selectors.ts","components/Calendar.tsx"],"names":["activitiesSelector","state","activities","activitiesStateSelector","CalendarBody","loadable","CalendarStyled","styled","div","props","monthOffset","Calendar","hours","minutes","seconds","date","useTranslation","t","i18n","useSelector","regions","forEach","activity","includes","region","push","useState","getDayList","dayList","getMonth","currentMonth","setCurrentMonth","getMonthOffsetList","Date","getFullYear","getDay","activeDay","setActiveDay","setRegion","dayNamesMap","monthNamesMap","activeDayData","filter","split","toISOString","className","dateTime","getDate","onChange","e","target","value","map","curRegion","onClick","prev","onDayClick","selectedDayDate","src","CalendarIcon","alt","length","title","description"],"mappings":"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","file":"static/js/10.69730302.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/calendar.1efe1ae0.svg\";","import {AppStateType} from \"../redux/store\";\n\nexport const activitiesStateSelector = (state: AppStateType) => state.activities\n\nexport const activitiesSelector = (state: AppStateType) => activitiesStateSelector(state).activities","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport CalendarIcon from \"../assets/images/calendar.svg\"\n// @ts-ignore\nimport uuid from 'react-uuid'\nimport {getDayList, getMonthOffsetList} from \"../utils/calendar\";\nimport {useSelector} from \"react-redux\";\nimport {activitiesSelector} from \"../selectors/activities-selectors\";\nimport loadable from '@loadable/component'\nimport {useTranslation} from \"react-i18next\";\n\nconst CalendarBody = loadable(() => import(\"./CalendarBody\"))\n\ninterface CalendarProps {\n    hours: string\n    minutes: string\n    seconds: string\n    date: Date\n}\n\nexport type DayType = {\n    id: string\n    dayNumber: number\n    dayNameNumber: number\n    monthNumber: number\n}\n\nconst Calendar: React.FC<CalendarProps> = ({\n                                               hours, minutes,\n                                               seconds, date\n                                           }) => {\n\n\n    const {t, i18n} = useTranslation()\n    const activities = useSelector(activitiesSelector)\n    const regions: Array<string> = []\n    activities.forEach(activity => !regions.includes(activity.region) ? regions.push(activity.region) : null)\n\n    const [dayList, setDayList] = useState<Array<Array<DayType>>>(() => getDayList(date))\n    const [currentMonth, setCurrentMonth] = useState(date.getMonth())\n    const [monthOffset, setMonthOffset] = useState<Array<number>>(() => getMonthOffsetList(date))\n    const [activeDay, setActiveDay] = useState(new Date(date.getFullYear(), date.getMonth(), date.getDay(), 12))\n\n    const [region, setRegion] = useState(regions[0] || '')\n\n\n    const dayNamesMap = [\n        t('Воскресенье'), t('Понедельник'), t('Вторник'),\n        t('Среда'), t('Четверг'),\n        t('Пятница'), t('Суббота'),\n    ]\n    const monthNamesMap = [\n        t('Январь'), t('Февраль'),\n        t('Март'), t('Апрель'),\n        t('Май'), t('Июнь'),\n        t('Июль'), t('Август'),\n        t('Сентябрь'), t('Октябрь'),\n        t('Ноябрь'), t('Декабрь'),\n    ]\n\n    const nextMonth = () => {\n        if (currentMonth !== 11) {\n            setCurrentMonth(prev => prev + 1)\n        }\n    }\n\n    const prevMonth = () => {\n        if (currentMonth !== 0) {\n            setCurrentMonth(prev => prev - 1)\n        }\n    }\n    const onDayClick = (selectedDayDate: Date) => {\n        setActiveDay(selectedDayDate)\n    }\n\n    const activeDayData = activities.filter(activity => activity.date.split('T')[0] === activeDay.toISOString().split('T')[0] && activity.region === region)\n    return (\n        <CalendarStyled className={'calendar popup'} currentMonth={currentMonth}\n                        monthOffset={monthOffset[currentMonth]}>\n            <div className=\"calendar__head\">\n                <time dateTime={'2021-08-14'}>\n                    <div className=\"calendar__time\">\n                        <span>{hours}:{minutes}:{seconds}</span>\n                    </div>\n                    <div className=\"calendar__date\">\n                        <span>{dayNamesMap[date.getDay()]}, {date.getDate()} {monthNamesMap[date.getMonth()]} {date.getFullYear()} {t('год')}</span>\n                    </div>\n                </time>\n                <select onChange={(e) => setRegion(e.target.value)} className=\"calendar__region\">\n                    {regions.map(curRegion => {\n                        return(\n                            <option key={curRegion} value={curRegion}>{curRegion}</option>\n                        )\n                    })}\n                </select>\n            </div>\n            <div className=\"calendar__body\">\n                <div className=\"calendar__top\">\n                    <h2 className=\"calendar__title\">{monthNamesMap[currentMonth]} {date.getFullYear()} {t('г.')}</h2>\n                    <div className=\"calendar__controls\">\n                        <button className=\"calendar-up\" onClick={prevMonth}></button>\n                        <button className=\"calendar-down\" onClick={nextMonth}></button>\n                    </div>\n                </div>\n                <div className=\"calendar__bottom\">\n                    <div className=\"calendar__table\">\n                        <div className=\"calendar__table-head\">\n                            <div className=\"calendar__table-row\">\n                                <div className=\"calendar__table-item\">\n                                    <span>пн</span>\n                                </div>\n                                <div className=\"calendar__table-item\">\n                                    <span>вт</span>\n                                </div>\n                                <div className=\"calendar__table-item\">\n                                    <span>ср</span>\n                                </div>\n                                <div className=\"calendar__table-item\">\n                                    <span>чт</span>\n                                </div>\n                                <div className=\"calendar__table-item\">\n                                    <span>пт</span>\n                                </div>\n                                <div className=\"calendar__table-item\">\n                                    <span>сб</span>\n                                </div>\n                                <div className=\"calendar__table-item\">\n                                    <span>вс</span>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"calendar__table-body\">\n                            <CalendarBody dayList={dayList} region={region} activeDay={activeDay} activities={activities} onDayClick={onDayClick}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"calendar__footer\">\n                <div className=\"calendar__top\">\n                    <h2 className=\"calendar__title\">\n                        {dayNamesMap[activeDay.getDay()]} {activeDay.getDate()} {monthNamesMap[activeDay.getMonth()]}\n                    </h2>\n                </div>\n                <div className=\"calendar__activity\">\n                    <img src={CalendarIcon} alt=\"\" className=\"calendar__activity-image\"/>\n                    <div className=\"calendar__activity-info\">\n                        <h3>{activeDayData.length !== 0 ? activeDayData[0].title : ''}</h3>\n                        <p className=\"calendar__activity-description\">\n                            {activeDayData.length !== 0 ? activeDayData[0].description : t('Мероприятий на этот день нет.')}\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </CalendarStyled>\n    );\n};\n\ninterface CalendarStyledProps {\n    currentMonth: number\n    monthOffset: number\n}\n\nconst CalendarStyled = styled.div<CalendarStyledProps>`\n  position: absolute;\n  top: -1400%;\n  right: 0;\n  width: 360px;\n  height: 700px;\n  background-color: #233339;\n  z-index: 10000;\n\n  .calendar__head {\n    text-align: left;\n    padding: 1.5rem 3.4rem;\n    .calendar__region {\n      width: 100%;\n      margin-top: 1rem;\n      padding: 0.5rem;\n    }\n    .calendar__time {\n      font-size: 4.2rem;\n      font-weight: 300;\n    }\n\n    .calendar__date {\n      color: #71d0f6;\n    }\n  }\n\n  .calendar__top {\n    margin-bottom: 0.8rem;\n  }\n\n  .calendar__title {\n    padding-left: 1.4rem;\n    font-weight: 300;\n    font-size: 1.6rem;\n  }\n\n  .calendar__body {\n    padding: 2rem;\n    border-top: 1px solid rgba(255, 255, 255, 0.3);\n    border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n  }\n\n  .calendar__top {\n    display: flex;\n    justify-content: space-between;\n  }\n\n  .calendar__table {\n    height: 28rem;\n    overflow: hidden;\n  }\n\n  .calendar__table-head {\n    position: relative;\n    z-index: 20;\n  }\n\n  .calendar__controls {\n    display: flex;\n    gap: 1rem;\n\n    button {\n      border: none;\n      background: transparent;\n      color: var(--white-color);\n      width: 30px;\n      height: 20px;\n      position: relative;\n\n      &:hover {\n        &:after {\n          border-color: rgba(255, 255, 255, 0.8);\n        }\n      }\n    }\n\n    .calendar-up:after, .calendar-down:after {\n      content: '';\n      position: absolute;\n      border-top: 1px solid rgba(255, 255, 255, 0.4);\n      border-right: 1px solid rgba(255, 255, 255, 0.4);\n      width: 15px;\n      height: 15px;\n      top: 50%;\n      left: 30%;\n      transform: translate(0, -50%);\n    }\n\n    .calendar-up:after {\n      transform: rotate(-45deg);\n    }\n\n    .calendar-down:after {\n      top: 0;\n      transform: rotate(135deg);\n    }\n  }\n\n  .calendar__table-row {\n    display: flex;\n  }\n\n  .calendar__table-item {\n    width: 48px;\n    height: 40px;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #233339;\n\n    &.active {\n      border: 1px solid black;\n      background: #33CC66;\n    }\n\n    &.selected {\n      border: 1px solid rgba(255, 255, 255, 0.3);\n      background: #FF6600;\n    }\n\n    &.other-month {\n      color: rgba(255, 255, 255, 0.4);\n    }\n  }\n\n  .calendar__table-body {\n    position: relative;\n    transition: all 0.3s linear;\n    top: -${props => props.monthOffset}px;\n\n    .calendar__table-item:hover {\n      border: 1px solid rgba(255, 255, 255, 0.3);\n    }\n  }\n\n  .calendar__footer {\n    padding: 1.5rem 2.4rem;\n\n    .calendar__activity {\n      padding: 1.5rem;\n      display: flex;\n      h3 {\n        font-size: 1.5rem;\n        text-align: left;\n        border-bottom: 1px solid white;\n        padding-bottom: 0.5rem;\n        margin-bottom: 0.5rem;\n      }\n      p {\n        font-weight: 300;\n      }\n    }\n\n    .calendar__activity-image {\n      width: 28px;\n      height: 28px;\n      margin-right: 2rem;\n    }\n\n    .calendar__activity-description {\n      text-align: left;\n      max-height: 160px;\n      overflow-y: auto;\n    }\n  }\n\n  @media (max-width: 823px) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: calc(100vh - 5rem);\n    overflow-y: auto;\n    .calendar__top {\n      max-width: 336px;\n      margin: 0 auto;\n    }\n\n    .calendar__bottom {\n      display: flex;\n      justify-content: center;\n    }\n  }\n`\n\nexport default Calendar;"],"sourceRoot":""}