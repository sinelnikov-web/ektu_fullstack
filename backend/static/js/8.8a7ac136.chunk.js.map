{"version":3,"sources":["components/Search.tsx","components/FileIcon.tsx","components/File.tsx"],"names":["SearchStyled","styled","div","Search","files","setFiles","className","setOpenSearch","useTranslation","t","i18n","useState","query","setQuery","onFileClick","id","prev","map","file","isOpen","isFocusedOnWindow","isMinimized","onClick","title","toLowerCase","includes","onChange","e","target","value","type","placeholder","FileIcon","React","memo","icon","LazyImage","src","baseURL","alt","File","onDoubleClick","isFocused","setIsFocused","openFileDoubleClick","fileRef","useRef","useEffect","FileStyled","ref","onFocus","onBlur","onKeyUp","code","tabIndex","draggable","onDragStart","currentTarget","classList","add","onDragEnd","remove"],"mappings":"sLAyDMA,EAAeC,IAAOC,IAAV,4/CAqFHC,UAhIuB,SAAC,GAAiD,IAAhDC,EAA+C,EAA/CA,MAAOC,EAAwC,EAAxCA,SAAUC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,cAChE,EAAkBC,cAAXC,EAAP,EAAOA,EACP,GADA,EAAUC,KACgBC,mBAAS,KAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAKMC,EAAc,SAACC,GACjBV,GAAS,SAAAW,GACL,OAAOA,EAAKC,KAAI,SAAAC,GACZ,OAAIA,EAAKH,KAAOA,EACL,2BAAIG,GAAX,IAAiBC,QAAQ,EAAMC,mBAAmB,EAAMC,aAAa,IAC9DH,EAAKE,kBACL,2BAAIF,GAAX,IAAiBE,mBAAmB,IAE7BF,QAInBX,GAAc,SAACS,GAAD,OAAU,MAI5B,OACI,eAAChB,EAAD,CAAcM,UAAWA,EAAY,wBAAyBgB,QAAS,kBAAMf,GAAc,SAAAS,GAAI,OAAKA,MAApG,UACI,qBAAKV,UAAU,eAAf,SACKF,EAAMa,KAAI,SAAAC,GAAI,OAAIA,EAAKK,MAAMC,cAAcC,SAASb,EAAMY,eAEvD,qBAAmBlB,UAAW,iBAA9B,SAAgD,cAAC,UAAD,CAAMgB,QAASR,EAAaI,KAAMA,EAAMd,MAAOA,KAArFc,EAAKH,IACb,qBAAmBT,UAAW,wBAA9B,SAAuD,cAAC,UAAD,CAAMgB,QAASR,EAAaI,KAAMA,EAAMd,MAAOA,KAA5Fc,EAAKH,SAEzB,qBAAKT,UAAU,iBAAf,SACI,qBAAKA,UAAU,gBAAf,SACI,kCACI,uBAAOoB,SA9BV,SAACC,GACdd,EAASc,EAAEC,OAAOC,QA6ByBA,MAAOjB,EAAOkB,KAAK,OAAOxB,UAAU,gBAAgByB,YAAatB,EAAE,uIAC9F,cAAC,IAAD,CAAYH,UAAW,mC,0GCnChC0B,EANEC,IAAMC,MAAoB,YAAa,IAAXC,EAAU,EAAVA,KACzC,OACI,cAACC,EAAA,EAAD,CAAWC,IAAKC,IAAUH,EAAMI,IAAI,QCEtCC,EAAOP,IAAMC,MAAgB,YAKQ,IAAD,IAJFO,qBAIE,MAJc,aAId,EAFKvB,GAEL,EAFFd,MAEE,EAFKc,MAEL,IAFWI,eAEX,MAFqB,aAErB,EAEtC,EAAkCX,oBAAS,GAA3C,mBAAO+B,EAAP,KAAkBC,EAAlB,KAEMC,EAAsB,WACxBH,EAAcvB,EAAKK,MAAOL,EAAKY,KAAMZ,EAAKH,KAOxC8B,EAAUC,iBAAO,MAEvBC,qBAAU,eAUV,OACI,cAACC,EAAD,CAAYzB,MAAOL,EAAKK,MAAO0B,IAAKJ,EAASvC,UAAW,eAAxD,SACI,sBACI4C,QAAS,kBAAMP,GAAa,IAC5BQ,OAAQ,kBAAMR,GAAa,IAC3BS,QAAS,SAACzB,GAAD,OAAOe,GAAwB,UAAXf,EAAE0B,KAAmBT,IAAwB,MAC1EU,SAAU,EACVhD,UAAW,kBAAaY,EAAKY,MAC7ByB,WAAS,EACTC,YAfM,SAAC7B,GACfA,EAAE8B,cAAcC,UAAUC,IAAI,SAetBC,UAbI,SAACjC,GACbA,EAAE8B,cAAcC,UAAUG,OAAO,SAazBpB,cAAeG,EACftB,QA5BU,WAClBA,EAAQJ,EAAKH,KAiBT,UAYI,qBAAKT,UAAU,aAAf,SACI,cAAC,EAAD,CAAU6B,KAAMjB,EAAKiB,SAEzB,oBAAI7B,UAAW,cAAf,SAA+BY,EAAKK,gBAM9CyB,EAAa/C,IAAOC,IAAV,6vBA2CDsC","file":"static/js/8.8a7ac136.chunk.js","sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport styled from \"styled-components\";\nimport {ReactComponent as SearchIcon} from \"../assets/images/windows_search.svg\";\nimport {FileType} from \"./Desktop\";\nimport File from \"./File\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface SearchProps {\n    files: Array<FileType>\n    setFiles: (cllbck: (files: Array<FileType>) => Array<FileType>) => void\n    className: string\n    setOpenSearch: (cllback: (isSearchOpen: boolean) => boolean) => void\n}\n\nconst Search: React.FC<SearchProps> = ({files, setFiles, className, setOpenSearch}) => {\n    const {t, i18n} = useTranslation()\n    const [query, setQuery] = useState('')\n\n    const onChange = (e:ChangeEvent<HTMLInputElement>) => {\n        setQuery(e.target.value)\n    }\n    const onFileClick = (id: number) => {\n        setFiles(prev => {\n            return prev.map(file => {\n                if (file.id === id) {\n                    return {...file, isOpen: true, isFocusedOnWindow: true, isMinimized: false}\n                } else if (file.isFocusedOnWindow) {\n                    return {...file, isFocusedOnWindow: false}\n                } else {\n                    return file\n                }\n            })\n        })\n        setOpenSearch((prev) => false)\n    }\n\n\n    return (\n        <SearchStyled className={className + ' toolbar-search-popup'} onClick={() => setOpenSearch(prev => !prev)}>\n            <div className=\"search__body\">\n                {files.map(file => file.title.toLowerCase().includes(query.toLowerCase())\n                    ?\n                    <div key={file.id} className={\"search__result\"}><File onClick={onFileClick} file={file} files={files}  /></div>\n                    : <div key={file.id} className={\"search__result hidden\"}><File onClick={onFileClick} file={file} files={files}  /></div>)}\n            </div>\n            <div className=\"search__footer\">\n                <div className=\"search__field\">\n                    <label>\n                        <input onChange={onChange} value={query} type=\"text\" className=\"search__input\" placeholder={t('Введите текст для поиска')}/>\n                        <SearchIcon className={'input__search-icon'}/>\n                    </label>\n                </div>\n            </div>\n        </SearchStyled>\n    );\n};\n\nconst SearchStyled = styled.div`\n  width: 400px;\n  height: 600px;\n  background-color: #333333;\n  position: absolute;\n  top: -1200%;\n  left: 0;\n  display: flex;\n  flex-direction: column;\n  transition: opacity 0.1s ease-in-out;\n  &.hidden {\n    opacity: 0;\n    height: 0;\n    .search__input {\n      display: none;\n    }\n  }\n  .search__body {\n    flex-grow: 1;\n    width: 100%;\n    overflow-y: auto;\n  }\n  .file-wrapper {\n    width: 100%;\n    max-width: none;\n  }\n  .search__result.hidden {\n    display: none;\n  }\n  .search__result {\n    .file {\n      flex-direction: row;\n    }\n  }\n  .file {\n    display: flex;\n    align-items: center;\n    width: 100%;\n    .file__icon {\n      margin-bottom: 0;\n      width: 5rem;\n      height: 5rem;\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: contain;\n      }\n    }\n  }\n  .search__footer {\n    width: 100%;\n    .search__field {\n      width: 100%;\n      position: relative;\n      \n      }\n      .input__search-icon {\n        position: absolute;\n        top: 30%;\n        left: 0;\n        fill: black;\n        height: 40%;\n        width: 4rem;\n      }\n    }\n  .search__input {\n    width: 100%;\n    font-size: 1.6rem;\n    font-weight: 300;\n    padding: 1rem 0 1rem 4rem;\n    display: block;\n    line-height: 1.2;\n    &::placeholder {\n      color: black;\n    }\n  }\n  @media (max-width: 823px) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: calc(100vh - 5rem);\n  }\n`\n\nexport default Search;","import React from 'react';\nimport LazyImage from \"./LazyImage/LazyImage\";\nimport {baseURL} from \"../api/base\";\n\ninterface FileIconProps {\n    icon: string\n}\n\nconst FileIcon = React.memo<FileIconProps>(({icon}) => {\n    return (\n        <LazyImage src={baseURL + icon} alt=\"\"/>\n    );\n});\n\nexport default FileIcon;","import React, {useEffect, useRef, useState} from 'react';\nimport styled from \"styled-components\";\nimport FileIcon from \"./FileIcon\";\nimport {FileType, FileTypes} from \"./Desktop\";\n\ninterface FileProps {\n    onDoubleClick?: (title: string, type: FileTypes, id: number) => void\n    onClick?: (id: number) => void\n    files: Array<FileType>\n    file: FileType\n}\n\nconst File = React.memo<FileProps>(({\n                                        onDoubleClick = () => {\n                                        },\n                                        files, file, onClick = () => {\n    }\n                                    }) => {\n\n    const [isFocused, setIsFocused] = useState(false)\n\n    const openFileDoubleClick = () => {\n        onDoubleClick(file.title, file.type, file.id)\n    }\n\n    const openFileClick = () => {\n        onClick(file.id)\n    }\n\n    const fileRef = useRef(null)\n\n    useEffect(() => {\n\n    })\n\n    const dragStart = (e: React.DragEvent<HTMLDivElement>) => {\n        e.currentTarget.classList.add('hold')\n    }\n    const dragEnd = (e: React.DragEvent<HTMLDivElement>) => {\n        e.currentTarget.classList.remove('hold')\n    }\n    return (\n        <FileStyled title={file.title} ref={fileRef} className={'file-wrapper'}>\n            <div\n                onFocus={() => setIsFocused(true)}\n                onBlur={() => setIsFocused(false)}\n                onKeyUp={(e) => isFocused && e.code === 'Enter' ? openFileDoubleClick() : null}\n                tabIndex={1}\n                className={\"file\" + ` ${file.type}`}\n                draggable\n                onDragStart={dragStart}\n                onDragEnd={dragEnd}\n                onDoubleClick={openFileDoubleClick}\n                onClick={openFileClick}\n            >\n                <div className=\"file__icon\">\n                    <FileIcon icon={file.icon}/>\n                </div>\n                <h4 className={'file__title'}>{file.title}</h4>\n            </div>\n        </FileStyled>\n    );\n});\n\nconst FileStyled = styled.div`\n  display: block;\n  text-align: center;\n  max-width: 8rem;\n\n  .file:hover {\n    &:hover {\n      background: rgba(255, 255, 255, 0.2);\n    }\n  }\n  .file.folder {\n    display: flex;\n    flex-direction: column;\n  }\n\n  .file__icon {\n    cursor: pointer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-bottom: 0.5rem;\n    padding: 0.5rem;\n\n    img {\n      position: relative;\n      left: -5px;\n      width: 8rem;\n      height: 8rem;\n      object-fit: cover;\n    }\n  }\n\n  .file__title {\n    color: var(--white-color);\n    font-size: 1.2rem;\n    cursor: pointer;\n    text-shadow: 0 2px 2px black;\n    font-weight: 300;\n    overflow: hidden;\n    max-height: 80px;\n  }\n`\n\nexport default File;"],"sourceRoot":""}