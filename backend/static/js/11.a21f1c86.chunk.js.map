{"version":3,"sources":["components/CalendarBody.tsx"],"names":["CalendarBody","dayList","activeDay","activities","onDayClick","region","date","Date","map","week","index","className","day","dayNumber","currentDate","getFullYear","monthNumber","isActive","toISOString","equalExist","filter","activity","split","length","tabIndex","onClick","id"],"mappings":"uGAAA,uBAkDeA,UAtCmC,SAAC,GAA2D,IAA1DC,EAAyD,EAAzDA,QAASC,EAAgD,EAAhDA,UAAWC,EAAqC,EAArCA,WAAYC,EAAyB,EAAzBA,WAAaC,EAAY,EAAZA,OACvFC,EAAO,IAAIC,KACjB,OACI,0CACKN,QADL,IACKA,OADL,EACKA,EAASO,KAAI,SAACC,EAAMC,GACjB,OACI,qBAAiBC,UAAU,sBAA3B,SACKF,EAAKD,KAAI,SAAAI,GACN,GAAIA,EAAIC,UAAW,CACf,IAAMC,EAAc,IAAIP,KAAKD,EAAKS,cAAeH,EAAII,YAAaJ,EAAIC,UAAW,IAC3EI,EAAWH,EAAYI,gBAAkBhB,EAAUgB,cAEnDC,EAAmC,IADtBhB,EAAWiB,QAAO,SAAAC,GAAQ,OAAIA,EAASf,KAAKgB,MAAM,KAAK,KAAOR,EAAYI,cAAcI,MAAM,KAAK,IAAMD,EAAShB,SAAWA,KAClHkB,OAE9B,OACI,qBAAKC,SAAU,EAAGC,QAAS,kBAAMrB,EAAWU,IAEvCH,UAAW,wBAA0BQ,EAAa,UAAY,KAAOF,EAAW,YAAc,IAFnG,SAKI,+BAAOL,EAAIC,aAJLD,EAAIc,IAQtB,OACI,qBAAkBf,UAAU,uBAA5B,SACI,0BADMC,EAAIc,QAnBhBhB","file":"static/js/11.a21f1c86.chunk.js","sourcesContent":["import React from 'react';\nimport {DayType} from \"./Calendar\";\nimport {ActivityType} from \"../api/activities-api\";\n\ninterface CalendarBodyProps {\n    dayList: Array<Array<DayType>>\n    region: string\n    activeDay: Date\n    activities: Array<ActivityType>,\n    onDayClick: (value: Date) => void\n}\n\nconst CalendarBody: React.FC<CalendarBodyProps> = ({dayList, activeDay, activities, onDayClick , region}) => {\n    const date = new Date()\n    return (\n        <>\n            {dayList?.map((week, index) => {\n                return (\n                    <div key={index} className=\"calendar__table-row\">\n                        {week.map(day => {\n                            if (day.dayNumber) {\n                                const currentDate = new Date(date.getFullYear(), day.monthNumber, day.dayNumber, 12)\n                                const isActive = currentDate.toISOString() === activeDay.toISOString()\n                                const equalDates = activities.filter(activity => activity.date.split('T')[0] === currentDate.toISOString().split('T')[0] && activity.region === region)\n                                const equalExist = equalDates.length !== 0\n\n                                return (\n                                    <div tabIndex={0} onClick={() => onDayClick(currentDate)}\n                                         key={day.id}\n                                         className={\"calendar__table-item\" + (equalExist ? ' active' : '') + (isActive ? ' selected' : '')}\n                                    >\n\n                                        <span>{day.dayNumber}</span>\n                                    </div>\n                                )\n                            }\n                            return (\n                                <div key={day.id} className=\"calendar__table-item\">\n                                    <span></span>\n                                </div>\n                            )\n                        })}\n                    </div>\n                )\n\n            })}\n        </>\n    );\n};\n\nexport default CalendarBody;"],"sourceRoot":""}