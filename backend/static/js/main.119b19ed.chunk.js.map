{"version":3,"sources":["api/base.ts","redux/actions/system-actions.ts","selectors/system-selectors.ts","components/Loader.tsx","styles/GlobalStyles.ts","utils/openTree.ts","assets/images/jambyl_logo.png","components/WelcomeLoading.tsx","redux/actions/files-actions.ts","api/files-api.ts","redux/files-reducer.ts","selectors/files-selectors.ts","api/activities-api.ts","redux/actions/actifities-actions.ts","redux/activities-reducer.ts","redux/actions/weather-actions.ts","api/weather-api.ts","redux/actions/general-actions.ts","redux/weather-reducer.ts","api/news-api.ts","redux/actions/news-actions.ts","redux/news-reducer.ts","api/socials-api.ts","redux/actions/socials-actions.ts","redux/socials-reducer.ts","components/MainLanguageFrame.tsx","App.tsx","redux/system-reducer.ts","redux/store.ts","i18n.ts","index.tsx"],"names":["baseURL","apiURL","APIInstance","axios","create","headers","CHANGE_LANGUAGE","changeLanguage","lang","type","payload","languageSelector","state","system","systemStateSelector","language","LoaderStyled","styled","div","Loader","className","GlobalStyles","createGlobalStyle","openTree","tree","dist","file","push","innerFiles","length","WelcomeLoadingStyled","WelcomeLoading","isLoading","useState","isHide","setIsHide","useTranslation","t","i18n","onAnimationEnd","src","JambylLogo","alt","GET_FILES_SUCCESS","filesAPI","get","localStorage","getItem","then","r","data","initialState","filesTree","filesTreeSelector","files","filesStateSelector","activitiesAPI","GET_ACTIVITIES_SUCCESS","activities","GET_WEATHER_SUCCESS","getWeatherSuccess","weather","weatherApi","city","START_FETCHING","END_FETCHING","startFetching","endFetching","id","main","description","icon","temp","feels_like","temp_min","temp_max","pressure","humidity","sea_level","grnd_level","name","isFetching","newsAPI","GET_NEWS_SUCCESS","articles","socialAPI","GET_SOCIALS_SUCCESS","socials","MainLanguageFrameStyled","MainLanguageFrame","dispatch","useDispatch","setAppLang","e","setItem","currentTarget","onClick","Desktop","loadable","ToolBar","Tour","AppStyled","App","languages","isTourCompleted","openedAppList","setOpenedAppList","useSelector","setFiles","setIsLoading","languageRef","useRef","useEffect","a","response","current","getWeather","map","isOpened","forEach","openedFile","isOpen","nextLang","currentLanguageIndex","indexOf","altKey","shiftKey","window","addEventListener","setLoading","rootReducer","combineReducers","action","news","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","use","initReactI18next","init","resources","ru","translation","kk","lng","interpolation","escapeValue","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAA,gFAEaA,EAAU,yBAEVC,EAASD,EAAU,OAGnBE,EAPb,OAO2BC,EAAMC,OAAO,CACpCJ,QAASC,EACTI,QAAS,CACL,kBAAmB,S,gCCR3B,oEAAO,IAAMC,EAAkB,kBAGlBC,EAAiB,SAACC,GAC3B,MAAO,CACHC,KAAMH,EACNI,QAASF,K,gCCNjB,kCAAO,IAEMG,EAAmB,SAACC,GAAD,OAFG,SAACA,GAAD,OAAyBA,EAAMC,OAETC,CAAoBF,GAAOG,W,yECY9EC,EAAeC,IAAOC,IAAV,6yDA6FHC,UA1GA,WACX,OACI,eAACH,EAAD,CAAcI,UAAU,SAAxB,UACI,qBAAKA,UAAU,OACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,WACf,qBAAKA,UAAU,gB,2GCTdC,EAAeC,YAAH,4a,eCClB,SAASC,EAASC,GACrB,IAD6D,EACzDC,EAAwB,GADiC,cAE5CD,GAF4C,IAE7D,2BAAuB,CAAC,IAAfE,EAAc,QACnBD,EAAKE,KAAKD,GACqB,IAA3BA,EAAKE,WAAWC,SAChBJ,EAAI,sBAAOA,GAAP,YAAgBF,EAASG,EAAKE,gBALmB,8BAQ7D,OAAOH,ECXI,I,MAAA,MAA0B,wC,uBCkCnCK,EAAuBb,IAAOC,IAAV,g6DA6GXa,EArIuC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,UACpD,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkBC,cAAXC,EAAP,EAAOA,EAAP,EAAUC,KACV,OACI,cAACR,EAAD,CACIV,WAAaY,EAAuB,GAAX,WAAkBE,EAAS,UAAY,IAChEK,eAAgB,kBAAMJ,GAAU,IAFpC,SAII,sBAAKf,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SAGI,qBAAKoB,IAAKC,EAAYC,IAAI,OAE9B,oBAAItB,UAAU,YAAd,2BACA,sBAAKA,UAAU,iBAAf,UACI,cAACD,EAAA,QAAD,IACA,6BAAKkB,EAAE,0G,gCCzBdM,EAAoB,oB,QCEpBC,EACK,WACV,OAAO1C,IAAY2C,IAAqB,QAAS,CAC7CxC,QAAS,CACL,kBAAmByC,aAAaC,QAAQ,sBAE7CC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SCJjBC,EAAe,CACjBC,UAAW,ICFFC,EAAoB,SAACzC,GAAD,OAFC,SAACA,GAAD,OAAyBA,EAAM0C,MAEPC,CAAmB3C,GAAOwC,WCKvEI,EACM,WACX,OAAOtD,IAAY2C,IAAyB,aAAc,CACtDxC,QAAS,CACL,kBAAmByC,aAAaC,QAAQ,sBAE7CC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SCdVO,EAAyB,yBCIzBN,EAAe,CACxBO,WAAY,ICLHC,EAAsB,sBAEtBC,EAAoB,SAACC,GAC9B,MAAO,CACHpD,KAAMkD,EACNjD,QAASmD,I,iBCyCJC,EACG,SAACC,GACT,OAAO5D,IAAM0C,IAAN,4DAAoFkB,EAApF,oDAA2If,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SCjDzJc,EAAiB,iBACjBC,EAAe,eAEfC,EAAgB,WACzB,MAAO,CACHzD,KAAMuD,IAIDG,EAAc,WACvB,MAAO,CACH1D,KAAMwD,ICWDd,EAAe,CACxBU,QAAS,CACLO,GAAI,EACJC,KAAM,GACNC,YAAa,GACbC,KAAM,IAEVF,KAAM,CACFG,KAAM,EACNC,WAAY,EACZC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,SAAU,EACVC,UAAW,EACXC,WAAY,GAEhBC,KAAM,GACNC,YAAY,G,gBC5BHC,EACA,WACL,OAAOhF,IAAY2C,IAAqB,WAAY,CAChDxC,QAAS,CACL,kBAAmByC,aAAaC,QAAQ,sBAE7CC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SChBViC,EAAmB,mBCC1BhC,EAAe,CACjBiC,SAAU,ICKDC,EACG,WACR,OAAOnF,IAAY2C,IAAuB,UAAW,CACjDxC,QAAS,CACL,kBAAmByC,aAAaC,QAAQ,sBAE7CC,MAAK,SAAAC,GAAC,OAAIA,EAAEC,SCdVoC,EAAsB,sBCG7BnC,GAAe,CACjBoC,QAAS,I,SCqBPC,GAA0BvE,IAAOC,IAAV,svCA6DduE,GAlFW,WAEtB,IAAMC,EAAWC,cACXC,EAAa,SAACC,GAChB/C,aAAagD,QAAQ,kBAAmBD,EAAEE,cAAc3B,IACxDsB,EAASnF,YAAesF,EAAEE,cAAc3B,MAG5C,OACI,cAACoB,GAAD,UACI,sBAAKpE,UAAU,kBAAf,UACI,oBAAIA,UAAW,yBAAf,uFACA,qBAAIA,UAAU,wBAAd,UACI,oBAAI4E,QAASJ,EAAYxB,GAAI,KAAMhD,UAAU,wBAA7C,SAAqE,gFACrE,oBAAI4E,QAASJ,EAAYxB,GAAI,KAAMhD,UAAU,wBAA7C,SAAqE,6ECAnF6E,GAAUC,cAAS,kBAAM,iCACzBC,GAAUD,cAAS,kBAAM,iCACzBE,GAAOF,cAAS,kBAAM,wDAuE5B,IAAMG,GAAYpF,IAAOC,IAAV,qNAYAoF,GAjFf,WACI,MAAkBlE,cAARE,GAAV,EAAOD,EAAP,EAAUC,MACJiE,EAAY,CAAC,KAAM,MACnBC,EAAkB1D,aAAaC,QAAQ,gBAC7C,EAA0Cd,mBAAqB,IAA/D,mBAAOwE,EAAP,KAAsBC,EAAtB,KACM3F,EAAW4F,YAAYhG,KACvByC,EAAYuD,YAAYtD,GAC9B,EAA0BpB,oBAAqB,kBAAMV,EAAS6B,MAA9D,mBAAOE,EAAP,KAAcsD,EAAd,KACA,EAAkC3E,oBAAS,GAA3C,mBAAOD,EAAP,KAAkB6E,EAAlB,KACMnB,EAAWC,cACXmB,EAAcC,iBAAOhG,GAC3BiG,qBAAU,WACNtB,EhBZoB,uCAAM,WAAOA,GAAP,eAAAuB,EAAA,sEACPrE,IADO,OACxBsE,EADwB,OAE9BxB,EFpBO,CACHjF,KAAMkC,EACNjC,QEkByBwG,IAFC,2CAAN,uDgBapBxB,EZbqB,uCAAM,WAAOA,GAAP,eAAAuB,EAAA,sEACRzD,IADQ,OACzB0D,EADyB,OAE/BxB,EDrBO,CACHjF,KAAMgD,EACN/C,QCmB0BwG,IAFC,2CAAN,uDYcrBxB,ELjBe,uCAAM,WAAOA,GAAP,eAAAuB,EAAA,sEACF/B,IADE,OACnBgC,EADmB,OAEzBxB,EDjBO,CACHjF,KAAM0E,EACNzE,QCeoBwG,IAFC,2CAAN,uDKkBfxB,EFhBkB,uCAAM,WAAOA,GAAP,eAAAuB,EAAA,sEACL5B,IADK,OACtB6B,EADsB,OAE5BxB,EDpBO,CACHjF,KAAM6E,EACN5E,QCkBuBwG,IAFC,2CAAN,uDEiBlBJ,EAAYK,QAAUpG,EACtBuB,EAAK/B,eAAeQ,KACrB,CAACA,IACJiG,qBAAU,WACNtB,ERmBkB,eAAC3B,EAAD,uDAAgB,iCAAhB,8CAA4B,WAAO2B,GAAP,iBAAAuB,EAAA,6DAClDvB,EAASxB,KADyC,SAE3BJ,EAAsBC,GAFK,OAE5CmD,EAF4C,OAG5CxG,EAAuB,CACzBmD,QAASqD,EAASrD,QAAQ,GAC1BQ,KAAM6C,EAAS7C,KACfW,KAAMkC,EAASlC,MAEnBU,EAAS9B,EAAkBlD,IAC3BgF,EAASvB,KATyC,2CAA5B,sDQnBTiD,MACV,IACHJ,qBAAU,WACNJ,EAASrF,EAAS6B,GAAWiE,KAAI,SAAA3F,GAC7B,IAAI4F,GAAW,EAEf,OADAb,EAAcc,SAAQ,SAAAC,GAAU,OAAIA,EAAWpD,KAAO1C,EAAK0C,GAAKkD,GAAW,EAAO,QAC9EA,EACO,2BAAI5F,GAAX,IAAiB+F,QAAQ,IAElB/F,QAGhB,CAAC0B,IACJ,IAAMsE,EAAW,SAAC7B,GACd,IAAM8B,EAAuBpB,EAAUqB,QAAQd,EAAYK,SACvDtB,EAAEgC,QAAUhC,EAAEiC,WACVH,EAAuB,IAAMpB,EAAU1E,QACvCiB,aAAagD,QAAQ,kBAAmBS,EAAU,IAClDb,EAASnF,YAAegG,EAAU,OAElCzD,aAAagD,QAAQ,kBAAmBS,EAAUoB,EAAuB,IACzEjC,EAASnF,YAAegG,EAAUoB,EAAuB,QASrE,OAJAX,qBAAU,WACNe,OAAOC,iBAAiB,UAAWN,KACpC,IAGC,eAACrB,GAAD,CAAWjF,UAAU,MAArB,UACI,cAACC,EAAD,IACEN,EAEI,qCACE,cAAC,EAAD,CAAgBiB,UAAWA,KACzBA,IAAcwE,GAAmB,cAACJ,GAAD,IACnC,cAACH,GAAD,CAAS7C,UAAWA,EAAWE,MAAOA,EAAOsD,SAAUA,EAAUF,iBAAkBA,EAC1ED,cAAeA,EAAewB,WAAYpB,IACnD,cAACV,GAAD,CAAS7C,MAAOA,EAAOsD,SAAUA,EAAUH,cAAeA,EACjDC,iBAAkBA,OAP7B,cAAC,GAAD,Q,kBCzEZvD,GAAe,CACjBpC,SAAU+B,aAAaC,QAAQ,oBCG/BmF,GAAcC,aAAgB,CAC9B7E,MlBEwB,WAAiE,IAAhE1C,EAA+D,uDAAvDuC,EAAciF,EAAyC,uCAExF,OAAQA,EAAO3H,MACX,KAAKkC,EACD,OAAO,2BAAI/B,GAAX,IAAkBwC,UAAU,YAAKgF,EAAO1H,WAE5C,QACI,OAAOE,IkBRf8C,WdE2B,WAAiE,IAAhE9C,EAA+D,uDAAvDuC,EAAciF,EAAyC,uCAC3F,OAAQA,EAAO3H,MACX,KAAKgD,EACD,OAAO,2BAAI7C,GAAX,IAAkB8C,WAAW,YAAK0E,EAAO1H,WAE7C,QACI,OAAOE,IcPfiD,QVkC0B,WAAiE,IAAhEjD,EAA+D,uDAAvDuC,EAAciF,EAAyC,uCAC1F,OAAQA,EAAO3H,MACX,KAAKkD,EACD,OAAO,2BAAI/C,GAAUwH,EAAO1H,SAEhC,KAAKsD,EACD,OAAO,2BAAIpD,GAAX,IAAkBqE,YAAY,IAElC,KAAKhB,EACD,OAAO,2BAAIrD,GAAX,IAAkBqE,YAAY,IAElC,QACI,OAAOrE,IU7CfC,ODAyB,WAAiE,IAAhED,EAA+D,uDAAvDuC,GAAciF,EAAyC,uCAEzF,OAAQA,EAAO3H,MACX,KAAKH,IACD,OAAO,2BAAIM,GAAX,IAAkBG,SAAUqH,EAAO1H,UAEvC,QACI,OAAOE,ICNfyH,KPJuB,WAA0D,IAAzDzH,EAAwD,uDAAhDuC,EAAciF,EAAkC,uCAChF,OAAQA,EAAO3H,MACX,KAAK0E,EACD,OAAO,2BAAIvE,GAAX,IAAkBwE,SAAS,YAAKgD,EAAO1H,WAE3C,QACI,OAAOE,IODf2E,QJJ0B,WAA0D,IAAzD3E,EAAwD,uDAAhDuC,GAAciF,EAAkC,uCACnF,OAAQA,EAAO3H,MACX,KAAK6E,EACD,OAAO,2BAAI1E,GAAX,IAAkB2E,QAAQ,YAAK6C,EAAO1H,WAE1C,QACI,OAAOE,MIKb0H,GAAmBP,OAAOQ,sCAAwCC,KAEpEC,GAAQC,aAAYR,GAAaI,GAAiBK,aAAgBC,QAItEb,OAAOc,UAAYJ,GAEJA,U,kBCyFfnG,KACKwG,IAAIC,MACJC,KAAK,CACFC,UApHU,CACdC,GAAI,CACAC,YAAa,CACT,qBAAO,qBACP,UAAM,UACN,iCAAS,iCACT,iCAAS,iCACT,yDAAa,yDACb,6CAAW,6CACX,2BAAQ,4BACR,yDAAa,yDACb,+DAAc,+DACd,wJAAiC,wJACjC,iCAAS,kCACT,gHAAuB,iHACvB,0DAAmB,2DACnB,iCAAS,kCACT,sEAAgB,uEAChB,6CAAW,8CACX,wFAAmB,yFACnB,yDAAa,0DACb,aAAc,aACd,8FAAoB,8FACpB,qEAAe,qEACf,6CAAW,6CACX,iCAAS,iCACT,6CAAW,6CACX,6CAAW,6CACX,6CAAW,6CACX,qEAAe,qEACf,uCAAU,uCACV,6CAAW,6CACX,2BAAQ,2BACR,uCAAU,uCACV,qBAAO,qBACP,2BAAQ,2BACR,2BAAQ,2BACR,uCAAU,uCACV,mDAAY,mDACZ,6CAAW,6CACX,uCAAU,uCACV,6CAAW,6CACX,6CAAW,6CACX,kRAAiE,kRACjE,oIAA4B,oIAC5B,6dAA6F,6dAC7F,uSAA6D,uSAC7D,6UAAqE,6UACrE,4PAAqD,4PACrD,gZAAiF,gZACjF,mWAAuE,mWACvE,4gBAA8G,4ZAC9G,uVAAqE,uVACrE,knBAA+H,onBAGvIC,GAAI,CACAD,YAAa,CACT,qBAAO,qBACP,iCAAS,iCACT,+DAAc,kFACd,iCAAS,oDACT,yDAAa,uCACb,2BAAQ,sBACR,yDAAa,iCACb,6CAAW,2BACX,UAAM,UACN,iCAAS,iCACT,8FAAoB,sEACpB,gHAAuB,+FACvB,0DAAmB,+CACnB,iCAAS,kCACT,sEAAgB,uEAChB,6CAAW,+DACX,wFAAmB,2GACnB,yDAAa,oDACb,aAAc,aACd,qEAAe,mDACf,6CAAW,mDACX,iCAAS,mDACT,6CAAW,mDACX,6CAAW,2BACX,6CAAW,iCACX,qEAAe,mDACf,uCAAU,uCACV,6CAAW,iCACX,2BAAQ,uCACR,uCAAU,iCACV,qBAAO,iCACP,2BAAQ,uCACR,2BAAQ,iCACR,uCAAU,iCACV,mDAAY,mDACZ,6CAAW,iCACX,uCAAU,uCACV,6CAAW,yDACX,6CAAW,uCACX,wJAAiC,0HACjC,kRAAiE,gRACjE,oIAA4B,4JAC5B,6dAA6F,2cAC7F,uSAA6D,8TAC7D,6UAAqE,oTACrE,4PAAqD,wPACrD,gZAAiF,8bACjF,mWAAuE,oUACvE,4gBAA8G,2eAC9G,uVAAqE,+RACrE,knBAA+H,6iBASnIE,IAAK,KAILC,cAAe,CACXC,aAAa,KAIVjH,GAAf,EC7HAkH,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,IAAD,CAAUjB,MAAOA,GAAjB,SACI,cAAC,GAAD,QAGRkB,SAASC,eAAe,W","file":"static/js/main.119b19ed.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport const baseURL = 'https://www.ektu.space'\n\nexport const apiURL = baseURL + '/api'\nexport const mediaURL = baseURL + '/media'\n\nexport const APIInstance = axios.create({\n    baseURL: apiURL,\n    headers: {\n        'Accept-Language': 'ru'\n    }\n})\n","import {LanguageType} from \"../../components/ToolbarLanguage\";\n\nexport const CHANGE_LANGUAGE = 'CHANGE_LANGUAGE'\n\n\nexport const changeLanguage = (lang: LanguageType) => {\n    return {\n        type: CHANGE_LANGUAGE,\n        payload: lang\n    }\n}\n\nexport type ActionTypes = 'CHANGE_LANGUAGE'","import {AppStateType} from \"../redux/store\";\n\nexport const systemStateSelector = (state: AppStateType) => state.system\n\nexport const languageSelector = (state: AppStateType) => systemStateSelector(state).language","import React from 'react';\nimport styled from \"styled-components\";\n\nconst Loader = () => {\n    return (\n        <LoaderStyled className='loader'>\n            <div className=\"bg\"></div>\n            <div className='circle'></div>\n            <div className='circle'></div>\n            <div className='circle'></div>\n            <div className='circle'></div>\n            <div className='circle'></div>\n        </LoaderStyled>\n    );\n};\n\nconst LoaderStyled = styled.div`\n\n  &.loader {\n    width: 20px;\n    height: 20px;\n  }\n\n\n  &.loader .circle {\n    position: absolute;\n    width: 20px;\n    height: 20px;\n    opacity: 0;\n    transform: rotate(225deg);\n    animation-iteration-count: infinite;\n    animation-name: orbit;\n    animation-duration: 5.5s;\n  }\n\n  &.loader .circle:after {\n    content: '';\n    position: absolute;\n    width: 4px;\n    height: 4px;\n    border-radius: 5px;\n    background: white;\n    //box-shadow: 0 0 9px rgba(255, 255, 255, .7);\n  }\n\n  &.loader .circle:nth-child(2) {\n    animation-delay: 240ms;\n  }\n\n  &.loader .circle:nth-child(3) {\n    animation-delay: 480ms;\n  }\n\n  &.loader .circle:nth-child(4) {\n    animation-delay: 720ms;\n  }\n\n  &.loader .circle:nth-child(5) {\n    animation-delay: 960ms;\n  }\n\n  &.loader .bg {\n    position: absolute;\n    height: 100%;\n    margin-left: -16px;\n    margin-top: -16px;\n    border-radius: 13px;\n    background: transparent;\n    animation: bgg 16087ms ease-in alternate infinite;\n  }\n\n  @keyframes orbit {\n    0% {\n      transform: rotate(225deg);\n      opacity: 1;\n      animation-timing-function: ease-out;\n    }\n    7% {\n      transform: rotate(345deg);\n      animation-timing-function: linear;\n    }\n    30% {\n      transform: rotate(455deg);\n      animation-timing-function: ease-in-out;\n    }\n    39% {\n      transform: rotate(690deg);\n      animation-timing-function: linear;\n    }\n    70% {\n      transform: rotate(815deg);\n      opacity: 1;\n      animation-timing-function: ease-out;\n    }\n    75% {\n      transform: rotate(945deg);\n      animation-timing-function: ease-out;\n    }\n    76% {\n      transform: rotate(945deg);\n      opacity: 0;\n    }\n    100% {\n      transform: rotate(945deg);\n      opacity: 0;\n    }\n\n`\n\nexport default Loader;","import {createGlobalStyle} from \"styled-components\";\n\nexport const GlobalStyles = createGlobalStyle`\n  :root {\n    --toolbar-bg-color: rgb(35,57,66);\n    --white-color: #fff;\n  }\n  \n  *, *:before, *:after {\n    padding: 0;\n    margin: 0;\n    box-sizing: border-box;\n    list-style: none;\n  }\n  html {\n    font-size: 10px;\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n  }\n`","import {FileType} from \"../components/Desktop\";\n\n\nexport function openTree(tree: Array<FileType>): Array<FileType> {\n    let dist: Array<FileType> = []\n    for (let file of tree) {\n        dist.push(file)\n        if (file.innerFiles.length !== 0) {\n            dist = [...dist, ...openTree(file.innerFiles)]\n        }\n    }\n    return dist\n}","export default __webpack_public_path__ + \"static/media/jambyl_logo.6a14fc0b.png\";","import React, {useState} from 'react';\nimport styled from \"styled-components\";\nimport JambylLogo from \"../assets/images/jambyl_logo.png\"\nimport Loader from \"./Loader\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface WelcomeLoadingProps {\n    isLoading: boolean\n}\n\nconst WelcomeLoading: React.FC<WelcomeLoadingProps> = ({isLoading}) => {\n    const [isHide, setIsHide] = useState(false)\n    const {t, i18n} = useTranslation()\n    return (\n        <WelcomeLoadingStyled\n            className={(!isLoading ? \"loaded\" : '') + (isHide ? \" hidden\" : '')}\n            onAnimationEnd={() => setIsHide(true)}\n        >\n            <div className=\"loading-plane\">\n                <div className=\"user-image\">\n                    {/*<div className=\"user-head\"></div>*/}\n                    {/*<div className=\"user-body\"></div>*/}\n                    <img src={JambylLogo} alt=\"\"/>\n                </div>\n                <h1 className=\"user-name\">Jambyl Oblysy</h1>\n                <div className=\"welcome-footer\">\n                    <Loader/>\n                    <h2>{t('Добро пожаловать')}</h2>\n                </div>\n            </div>\n        </WelcomeLoadingStyled>\n    );\n};\n\nconst WelcomeLoadingStyled = styled.div`\n  width: 100%;\n  height: 100%;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: #0077d3 no-repeat center center;\n  background-size: cover;\n  z-index: 10000;\n  transition: opacity 0.4s linear;\n  color: white;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  //&.loaded {\n  //  animation: 0.5s disappearing;\n  //}\n  //&.hidden {\n  //  display: none;\n  //}\n  .loading-plane {\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    background-color: rgba(0, 0, 0, 0.3);\n  }\n\n  .user-image {\n    width: 200px;\n    height: 200px;\n    position: relative;\n    background-color: rgba(255, 255, 255, 0.4);\n    border-radius: 50%;\n    img {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  }\n\n  .user-head {\n    position: absolute;\n    top: 40%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 70px;\n    height: 70px;\n    border: 6px solid white;\n    border-radius: 50%;\n  }\n\n  .user-body {\n    position: absolute;\n    top: 69%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 100px;\n    height: 50px;\n    border-radius: 100px 100px 0 0;\n    border-top: 5px solid white;\n    border-left: 5px solid white;\n    border-right: 5px solid white;\n  }\n\n  .user-name {\n    font-weight: 300;\n    font-size: 6rem;\n    margin-bottom: 1rem;\n    @media (max-width: 400px) {\n      font-size: 4.5rem;\n    }\n  }\n\n  .welcome-footer {\n    display: flex;\n    align-items: center;\n    gap: 1.5rem;\n\n    h2 {\n      font-weight: 300;\n      font-size: 2rem;\n    }\n  }\n\n  &.loaded {\n    animation: 0.5s disappearing;\n  }\n\n  &.hidden {\n    display: none;\n  }\n\n  @keyframes disappearing {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n\n}\n`\n\nexport default WelcomeLoading;","import {FileType} from \"../../components/Desktop\";\n\nexport const GET_FILES_SUCCESS = 'GET_FILES_SUCCESS'\nexport const CHANGE_FILE_STATE = 'CHANGE_FILE_STATE'\n\nexport const getFilesTreeSuccess = (files:Array<FileType>) => {\n    return {\n        type: GET_FILES_SUCCESS,\n        payload: files\n    }\n}\n\nexport const changeFileState = (files:Array<FileType>) => {\n    return {\n        type: CHANGE_FILE_STATE,\n        payload: files\n    }\n}\n\nexport type ActionTypes = 'GET_FILES_SUCCESS' | 'CHANGE_FILE_STATE'","import {FileType} from \"../components/Desktop\";\nimport {APIInstance} from \"./base\";\n\n\nexport const filesAPI = {\n    getFilesTree: () => {\n        return APIInstance.get<Array<FileType>>('files', {\n            headers: {\n                'Accept-Language': localStorage.getItem('currentLanguage')\n            }\n        }).then(r => r.data)\n    }\n}","import {FileType} from \"../components/Desktop\";\nimport {Dispatch} from \"redux\";\nimport {ActionTypes, GET_FILES_SUCCESS, getFilesTreeSuccess} from \"./actions/files-actions\";\nimport {filesAPI} from \"../api/files-api\";\n\n\nconst initialState = {\n    filesTree: [] as Array<FileType>\n}\n\ntype InitialStateType = typeof initialState\n\nexport const filesReducer = (state = initialState, action: ActionType): InitialStateType => {\n\n    switch (action.type) {\n        case GET_FILES_SUCCESS: {\n            return {...state, filesTree: [...action.payload]}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const getFilesTree = () => async (dispatch: Dispatch) => {\n    const response = await filesAPI.getFilesTree()\n    dispatch(getFilesTreeSuccess(response))\n}\n\ntype ActionType = {\n    type: ActionTypes,\n    payload: Array<FileType>\n}","import {AppStateType} from \"../redux/store\";\n\n\nexport const filesStateSelector = (state: AppStateType) => state.files\n\nexport const filesTreeSelector = (state: AppStateType) => filesStateSelector(state).filesTree","import {APIInstance} from \"./base\";\n\nexport type ActivityType = {\n    id: number,\n    title: string,\n    description: string\n    date: string\n    region: string\n}\n\nexport const activitiesAPI = {\n    getActivities: () => {\n        return APIInstance.get<Array<ActivityType>>('activities', {\n            headers: {\n                'Accept-Language': localStorage.getItem('currentLanguage')\n            }\n        }).then(r => r.data)\n    }\n}","import {ActivityType} from \"../../api/activities-api\";\n\nexport const GET_ACTIVITIES_SUCCESS = 'GET_ACTIVITIES_SUCCESS'\n\nexport const getActivitiesSuccess = (activities: Array<ActivityType>) => {\n    return {\n        type: GET_ACTIVITIES_SUCCESS,\n        payload: activities\n    }\n}\n\nexport type ActionTypes = 'GET_ACTIVITIES_SUCCESS'","import {activitiesAPI, ActivityType} from \"../api/activities-api\";\nimport {ActionTypes, GET_ACTIVITIES_SUCCESS, getActivitiesSuccess} from \"./actions/actifities-actions\";\nimport {FileType} from \"../components/Desktop\";\nimport {Dispatch} from \"redux\";\n\n\nexport const initialState = {\n    activities: [] as Array<ActivityType>\n}\n\ntype InitialStateType = typeof initialState\n\n\nexport const activityReducer = (state = initialState, action: ActionType): InitialStateType => {\n    switch (action.type) {\n        case GET_ACTIVITIES_SUCCESS: {\n            return {...state, activities: [...action.payload]}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const getActivities = () => async (dispatch: Dispatch) => {\n    const response = await activitiesAPI.getActivities()\n    dispatch(getActivitiesSuccess(response))\n}\n\ntype ActionType = {\n    type: ActionTypes,\n    payload: Array<ActivityType>\n}","import {PayloadType} from \"../weather-reducer\";\n\nexport const GET_WEATHER_SUCCESS = 'GET_WEATHER_SUCCESS'\n\nexport const getWeatherSuccess = (weather: PayloadType) => {\n    return {\n        type: GET_WEATHER_SUCCESS,\n        payload: weather\n    }\n}\n\nexport type ActionTypes = 'GET_WEATHER_SUCCESS'","import axios from \"axios\";\n\ntype WeatherResponseType = {\n    coord: {\n        lon: number,\n        lat: number,\n    },\n    weather: [\n        {\n            id: number,\n            main: string,\n            description: string,\n            icon: string,\n        }\n    ],\n    base: string,\n    main: {\n        temp: number,\n        feels_like: number,\n        temp_min: number,\n        temp_max: number,\n        pressure: number,\n        humidity: number,\n        sea_level: number,\n        grnd_level: number,\n    },\n    visibility: number,\n    wind: {\n        speed: number,\n        deg: number,\n        gust: number,\n    },\n    clouds: {\n        all: number\n    },\n    dt: number,\n    sys: {\n        country: string,\n        sunrise: number,\n        sunset: number,\n    },\n    timezone: number,\n    id: number,\n    name: string,\n    cod: number,\n}\n\n\nexport const weatherApi = {\n    getWeather: (city: string) => {\n        return axios.get<WeatherResponseType>(`https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru&appid=a872f78cae30a043d03c0f3f5aa46bbd`).then(r => r.data)\n    },\n}","\nexport const START_FETCHING = 'START_FETCHING'\nexport const END_FETCHING = 'END_FETCHING'\n\nexport const startFetching = () => {\n    return {\n        type: START_FETCHING\n    }\n}\n\nexport const endFetching = () => {\n    return {\n        type: END_FETCHING\n    }\n}\n\nexport type GeneralActionTypes = 'START_FETCHING' | 'END_FETCHING'","import {ActionTypes, GET_WEATHER_SUCCESS, getWeatherSuccess} from \"./actions/weather-actions\";\nimport {Dispatch} from \"redux\";\nimport {weatherApi} from \"../api/weather-api\";\nimport {END_FETCHING, endFetching, GeneralActionTypes, START_FETCHING, startFetching} from \"./actions/general-actions\";\n\ntype WeatherType = {\n    id: number\n    main: string\n    description: string\n    icon: string\n}\n\ntype MainType = {\n    temp: number,\n    feels_like: number,\n    temp_min: number,\n    temp_max: number,\n    pressure: number,\n    humidity: number,\n    sea_level: number,\n    grnd_level: number,\n}\n\nexport const initialState = {\n    weather: {\n        id: 0,\n        main: '',\n        description: '',\n        icon: '',\n    } as WeatherType,\n    main: {\n        temp: 0,\n        feels_like: 0,\n        temp_min: 0,\n        temp_max: 0,\n        pressure: 0,\n        humidity: 0,\n        sea_level: 0,\n        grnd_level: 0,\n    } as MainType,\n    name: '' as string,\n    isFetching: false\n}\n\nexport type InitialStateType = typeof initialState\n\nexport const weatherReducer = (state = initialState, action: ActionType): InitialStateType => {\n    switch (action.type) {\n        case GET_WEATHER_SUCCESS: {\n            return {...state, ...action.payload}\n        }\n        case START_FETCHING: {\n            return {...state, isFetching: true}\n        }\n        case END_FETCHING: {\n            return {...state, isFetching: false}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const getWeather = (city: string = 'Тараз') => async (dispatch: Dispatch) => {\n    dispatch(startFetching())\n    const response = await weatherApi.getWeather(city)\n    const payload: PayloadType = {\n        weather: response.weather[0],\n        main: response.main,\n        name: response.name,\n    }\n    dispatch(getWeatherSuccess(payload))\n    dispatch(endFetching())\n}\n\nexport type PayloadType = {\n    weather: WeatherType,\n    main: MainType,\n    name: string\n}\n\ntype ActionType = {\n    type: ActionTypes | GeneralActionTypes\n    payload: InitialStateType\n}","import {APIInstance} from \"./base\";\n\n\nexport type NewsType = {\n    id: number\n    title: string\n    icon: string\n    text: string\n    created: string\n    likes_count: string\n    date: string\n}\n\nexport const newsAPI = {\n    getNews: () => {\n        return APIInstance.get<Array<NewsType>>('articles', {\n            headers: {\n                'Accept-Language': localStorage.getItem('currentLanguage')\n            }\n        }).then(r => r.data)\n    }\n}","import {FileType} from \"../../components/Desktop\";\nimport {NewsType} from \"../../api/news-api\";\n\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS'\n\nexport const getNewsSuccess = (news:Array<NewsType>) => {\n    return {\n        type: GET_NEWS_SUCCESS,\n        payload: news\n    }\n}\n\n\nexport type ActionTypes = 'GET_NEWS_SUCCESS'","import {Dispatch} from \"redux\";\nimport {newsAPI, NewsType} from \"../api/news-api\";\nimport {GET_NEWS_SUCCESS, getNewsSuccess} from \"./actions/news-actions\";\n\nconst initialState = {\n    articles: [] as Array<NewsType>\n}\n\ntype InitialStateType = typeof initialState\n\nexport const newsReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case GET_NEWS_SUCCESS: {\n            return {...state, articles: [...action.payload]}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport const getNews = () => async (dispatch:Dispatch) => {\n    const response = await newsAPI.getNews()\n    dispatch(getNewsSuccess(response))\n}","import {APIInstance} from \"./base\";\n\n\nexport type SocialType = {\n    id: number\n    icon: string\n    link: string\n    title: string\n}\n\nexport const socialAPI = {\n    getSocials: () => {\n        return APIInstance.get<Array<SocialType>>('socials', {\n            headers: {\n                'Accept-Language': localStorage.getItem('currentLanguage')\n            }\n        }).then(r => r.data)\n    }\n}","import {SocialType} from \"../../api/socials-api\";\n\nexport const GET_SOCIALS_SUCCESS = 'GET_SOCIALS_SUCCESS'\n\nexport const getSocialsSuccess = (socials: Array<SocialType>) => {\n    return {\n        type: GET_SOCIALS_SUCCESS,\n        payload: socials\n    }\n}\n\nexport type ActionTypes = 'GET_SOCIALS_SUCCESS'","import {socialAPI, SocialType} from \"../api/socials-api\";\nimport {Dispatch} from \"redux\";\nimport {GET_SOCIALS_SUCCESS, getSocialsSuccess} from \"./actions/socials-actions\";\n\n\nconst initialState = {\n    socials: [] as Array<SocialType>\n}\n\nexport type InitialStateType = typeof initialState\n\nexport const socialsReducer = (state = initialState, action: any): InitialStateType => {\n    switch (action.type) {\n        case GET_SOCIALS_SUCCESS: {\n            return {...state, socials: [...action.payload]}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\n\nexport const getSocials = () => async (dispatch: Dispatch) => {\n    const response = await socialAPI.getSocials()\n    dispatch(getSocialsSuccess(response))\n}","import React, {MouseEvent} from 'react';\nimport styled from \"styled-components\";\nimport {useDispatch} from \"react-redux\";\nimport {changeLanguage} from \"../redux/actions/system-actions\";\nimport {LanguageType} from \"./ToolbarLanguage\";\n\nconst MainLanguageFrame = () => {\n\n    const dispatch = useDispatch()\n    const setAppLang = (e: MouseEvent<HTMLLIElement>) => {\n        localStorage.setItem('currentLanguage', e.currentTarget.id)\n        dispatch(changeLanguage(e.currentTarget.id as LanguageType))\n    }\n\n    return (\n        <MainLanguageFrameStyled>\n            <div className=\"choose-language\">\n                <h1 className={\"choose-language__title\"}>Выберите язык</h1>\n                <ul className=\"choose-language__list\">\n                    <li onClick={setAppLang} id={'ru'} className=\"choose-language__item\"><span>Русский</span></li>\n                    <li onClick={setAppLang} id={'kk'} className=\"choose-language__item\"><span>Қазақ</span></li>\n                </ul>\n            </div>\n        </MainLanguageFrameStyled>\n    );\n};\n\nconst MainLanguageFrameStyled = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background: #0077d3;\n  z-index: 999999;\n  .choose-language__title {\n    position: absolute;\n    top: 35%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 5rem;\n    color: white;\n    white-space: nowrap;\n    @media (max-width: 575px) {\n      font-size: 4.5rem;\n    }\n    @media (max-width: 397px) {\n      font-size: 3.5rem;\n    }\n  }\n  .choose-language__list {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    display: flex;\n    flex-wrap: wrap;\n    gap: 2rem;\n    justify-content: center;\n    align-items: center;\n    align-content: flex-end;\n    padding: 8rem 0 0 0;\n\n    .choose-language__item {\n      min-width: 250px;\n      text-align: center;\n      padding: 0.5rem 2.5rem 1.5rem;\n      background: #0090fc;\n      cursor: pointer;\n      &:hover {\n        background: #269dff;\n      }\n\n      span {\n        color: white;\n        font-size: 5rem;\n        font-weight: 300;\n        @media (max-width: 575px) {\n          font-size: 4.5rem;\n        }\n        @media (max-width: 397px) {\n          font-size: 3.5rem;\n        }\n      }\n    }\n  }\n`\n\nexport default MainLanguageFrame;","import React, {useEffect, useRef, useState} from 'react';\nimport styled from \"styled-components\";\nimport {GlobalStyles} from \"./styles/GlobalStyles\";\nimport {FileType} from \"./components/Desktop\";\nimport {openTree} from \"./utils/openTree\";\nimport WelcomeLoading from \"./components/WelcomeLoading\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getFilesTree} from \"./redux/files-reducer\";\nimport {filesTreeSelector} from \"./selectors/files-selectors\";\nimport {getActivities} from \"./redux/activities-reducer\";\nimport {getWeather} from \"./redux/weather-reducer\";\nimport {languageSelector} from \"./selectors/system-selectors\";\nimport {changeLanguage} from \"./redux/actions/system-actions\";\nimport {LanguageType} from \"./components/ToolbarLanguage\";\nimport {getNews} from \"./redux/news-reducer\";\nimport {useTranslation} from \"react-i18next\";\nimport {getSocials} from \"./redux/socials-reducer\";\nimport loadable from '@loadable/component'\nimport MainLanguageFrame from \"./components/MainLanguageFrame\";\n\nconst Desktop = loadable(() => import(\"./components/Desktop\"))\nconst ToolBar = loadable(() => import(\"./components/ToolBar\"))\nconst Tour = loadable(() => import(\"./components/Tour\"))\n\nfunction App() {\n    const {t, i18n} = useTranslation()\n    const languages = ['ru', 'kk']\n    const isTourCompleted = localStorage.getItem('tourComplete')\n    const [openedAppList, setOpenedAppList] = useState<FileType[]>([])\n    const language = useSelector(languageSelector)\n    const filesTree = useSelector(filesTreeSelector)\n    const [files, setFiles] = useState<FileType[]>(() => openTree(filesTree))\n    const [isLoading, setIsLoading] = useState(true)\n    const dispatch = useDispatch()\n    const languageRef = useRef(language)\n    useEffect(() => {\n        dispatch(getFilesTree())\n        dispatch(getActivities())\n        dispatch(getNews())\n        dispatch(getSocials())\n        languageRef.current = language\n        i18n.changeLanguage(language as LanguageType)\n    }, [language])\n    useEffect(() => {\n        dispatch(getWeather())\n    }, [])\n    useEffect(() => {\n        setFiles(openTree(filesTree).map(file => {\n            let isOpened = false\n            openedAppList.forEach(openedFile => openedFile.id === file.id ? isOpened = true : null)\n            if (isOpened) {\n                return {...file, isOpen: true}\n            } else {\n                return file\n            }\n        }))\n    }, [filesTree])\n    const nextLang = (e: KeyboardEvent) => {\n        const currentLanguageIndex = languages.indexOf(languageRef.current as string)\n        if (e.altKey && e.shiftKey) {\n            if (currentLanguageIndex + 1 === languages.length) {\n                localStorage.setItem('currentLanguage', languages[0])\n                dispatch(changeLanguage(languages[0] as LanguageType))\n            } else {\n                localStorage.setItem('currentLanguage', languages[currentLanguageIndex + 1])\n                dispatch(changeLanguage(languages[currentLanguageIndex + 1] as LanguageType))\n            }\n        }\n    }\n\n    useEffect(() => {\n        window.addEventListener('keydown', nextLang)\n    }, [])\n\n    return (\n        <AppStyled className=\"App\">\n            <GlobalStyles/>\n            {!language\n                ? <MainLanguageFrame/>\n                : <>\n                    <WelcomeLoading isLoading={isLoading}/>\n                    {!isLoading && !isTourCompleted && <Tour/>}\n                    <Desktop filesTree={filesTree} files={files} setFiles={setFiles} setOpenedAppList={setOpenedAppList}\n                             openedAppList={openedAppList} setLoading={setIsLoading}/>\n                    <ToolBar files={files} setFiles={setFiles} openedAppList={openedAppList}\n                             setOpenedAppList={setOpenedAppList}/>\n                </>\n            }\n\n        </AppStyled>\n    );\n}\n\nconst AppStyled = styled.div`\n  max-width: 100vw;\n  width: 100vw;\n  max-height: 100vh;\n  height: 100vh;\n  position: relative;\n  background: #0077d3 no-repeat center center;\n  * {\n    user-select: none;\n  }\n`\n\nexport default App;\n","import {stat} from \"fs\";\nimport {ActionTypes, CHANGE_LANGUAGE} from \"./actions/system-actions\";\nimport {LanguageType} from \"../components/ToolbarLanguage\";\n\n\nconst initialState = {\n    language: localStorage.getItem('currentLanguage'),\n\n}\n\ntype InitialStateType = typeof initialState\n\n\nexport const systemReducer = (state = initialState, action: ActionType): InitialStateType => {\n\n    switch (action.type) {\n        case CHANGE_LANGUAGE: {\n            return {...state, language: action.payload}\n        }\n        default: {\n            return state\n        }\n    }\n}\n\n\ntype ActionType =  {\n    type: ActionTypes,\n    payload: LanguageType\n}","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {filesReducer} from \"./files-reducer\";\nimport {activityReducer} from \"./activities-reducer\";\nimport {weatherReducer} from \"./weather-reducer\";\nimport {systemReducer} from \"./system-reducer\";\nimport {newsReducer} from \"./news-reducer\";\nimport {socialsReducer} from \"./socials-reducer\";\n\nlet rootReducer = combineReducers({\n    files: filesReducer,\n    activities: activityReducer,\n    weather: weatherReducer,\n    system: systemReducer,\n    news: newsReducer,\n    socials: socialsReducer\n})\n\ntype RootReducerType = typeof rootReducer\nexport type AppStateType = ReturnType<RootReducerType>\n\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\n\n// @ts-ignore\nwindow.__store__ = store\n\nexport default store","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n\n// the translations\n// (tip move them in a JSON file and import them,\n// or even better, manage them separated from your code: https://react.i18next.com/guides/multiple-translation-files)\nconst resources = {\n    ru: {\n        translation: {\n            \"год\": \"год\",\n            \"г.\": \"г.\",\n            \"Назад\": \"Назад\",\n            \"Далее\": \"Далее\",\n            \"Казахский\": \"Казахский\",\n            \"Русский\": \"Русский\",\n            \"Язык\": \"Язык.\",\n            \"Закончить\": \"Закончить\",\n            \"Пропустить\": \"Пропустить\",\n            'Мероприятий на этот день нет.': 'Мероприятий на этот день нет.',\n            \"Поиск\": \"Поиск.\",\n            \"Панель инструментов\": \"Панель инструментов.\",\n            \"Office документ\": \"Office документ.\",\n            \"Папка\": \"Папка.\",\n            \"Рабочий стол\": \"Рабочий стол.\",\n            \"Новости\": \"Новости.\",\n            \"Социальные сети\": \"Социальные сети.\",\n            \"Календарь\": \"Календарь.\",\n            \"Instagram.\": \"Instagram.\",\n            \"Добро пожаловать\": \"Добро пожаловать\",\n            \"Понедельник\": \"Понедельник\",\n            \"Вторник\": \"Вторник\",\n            \"Среда\": \"Среда\",\n            \"Четверг\": \"Четверг\",\n            \"Пятница\": \"Пятница\",\n            \"Суббота\": \"Суббота\",\n            \"Воскресенье\": \"Воскресенье\",\n            \"Январь\": \"Январь\",\n            \"Февраль\": \"Февраль\",\n            \"Март\": \"Март\",\n            \"Апрель\": \"Апрель\",\n            \"Май\": \"Май\",\n            \"Июнь\": \"Июнь\",\n            \"Июль\": \"Июль\",\n            \"Август\": \"Август\",\n            \"Сентябрь\": \"Сентябрь\",\n            \"Октябрь\": \"Октябрь\",\n            \"Ноябрь\": \"Ноябрь\",\n            \"Декабрь\": \"Декабрь\",\n            \"облачно\": \"облачно\",\n            \"При нажатии на эту кнопку, откроется виджет с нашим Instagram\": \"При нажатии на эту кнопку, откроется виджет с нашим Instagram\",\n            \"Введите текст для поиска\": \"Введите текст для поиска\",\n            \"При нажатии на этот элемент Вы можете посмотреть запланированные мероприятия по регионам.\": \"При нажатии на этот элемент Вы можете посмотреть запланированные мероприятия по регионам.\",\n            \"При нажатии на этот элемент Вы можете сменить язык сайта.\": \"При нажатии на этот элемент Вы можете сменить язык сайта.\",\n            \"Это рабочий стол. На нём располагаются папки и файлы с контентом.\": \"Это рабочий стол. На нём располагаются папки и файлы с контентом.\",\n            \"Это папка. Вы можете открыть её двойным нажатием.\": \"Это папка. Вы можете открыть её двойным нажатием.\",\n            \"При нажатии на этот элемент Вы можете увидеть ссылки на наши социальные сети.\": \"При нажатии на этот элемент Вы можете увидеть ссылки на наши социальные сети.\",\n            \"При нажатии на этот элемент Вы можете посмотреть последние новости.\": \"При нажатии на этот элемент Вы можете посмотреть последние новости.\",\n            \"Это документ office. Вы можете открыть его двойным нажатием и посмотреть содержимое, скачать, распечатать.\": \"Это документ office. Вы можете открыть его двойным нажатием и посмотреть содержимое.\",\n            \"Это панель инструментов. На ней располагается навигация по сайту.\": \"Это панель инструментов. На ней располагается навигация по сайту.\",\n            \"Это поиск по сайту. При нажатии на него, откроется поиск с помощью которого Вы легко сможете найти нужный контент на сайте.\": \"Это поиск по сайту. При нажатии на него, откроется поиск с помощью которого Вы легко сможете найти нужный контент на сайте.\",\n        }\n    },\n    kk: {\n        translation: {\n            \"год\": \"жыл\",\n            \"Назад\": \"Артқа\",\n            \"Пропустить\": \"Өткізіп жіберу\",\n            \"Далее\": \"Әрі қарай\",\n            \"Закончить\": \"Аяқтау\",\n            \"Язык\": \"Тіл.\",\n            \"Казахский\": \"Қазақ\",\n            \"Русский\": \"Орыс\",\n            \"г.\": \"ж.\",\n            \"Поиск\": \"Іздеу\",\n            \"Добро пожаловать\": \"Қош келдіңіз\",\n            \"Панель инструментов\": \"Саймандар панелі.\",\n            \"Office документ\": \"Office құжаты.\",\n            \"Папка\": \"Қалта.\",\n            \"Рабочий стол\": \"Жұмыс үстелі.\",\n            \"Новости\": \"Жаңалықтар\",\n            \"Социальные сети\": \"Әлеуметтік желілер.\",\n            \"Календарь\": \"Күнтізбе.\",\n            \"Instagram.\": \"Instagram.\",\n            \"Понедельник\": \"Дүйсенбі\",\n            \"Вторник\": \"Сейсенбі\",\n            \"Среда\": \"Сәрсенбі\",\n            \"Четверг\": \"Бейсенбі\",\n            \"Пятница\": \"Жұма\",\n            \"Суббота\": \"Сенбі\",\n            \"Воскресенье\": \"Жексенбі\",\n            \"Январь\": \"Қаңтар\",\n            \"Февраль\": \"Ақпан\",\n            \"Март\": \"Наурыз\",\n            \"Апрель\": \"Сәуір\",\n            \"Май\": \"Мамыр\",\n            \"Июнь\": \"Маусым\",\n            \"Июль\": \"Шілде\",\n            \"Август\": \"Тамыз\",\n            \"Сентябрь\": \"Қыркүйек\",\n            \"Октябрь\": \"Қазан\",\n            \"Ноябрь\": \"Қараша\",\n            \"Декабрь\": \"Желтоқсан\",\n            \"облачно\": \"бұлтты\",\n            'Мероприятий на этот день нет.': 'Бұл күні іс-шаралар жоқ.',\n            \"При нажатии на эту кнопку, откроется виджет с нашим Instagram\": \"Осы батырманы басқан кезде виджет Біздің Instagram-ді ашады\",\n            \"Введите текст для поиска\": \"Іздеу үшін мәтінді енгізіңіз\",\n            \"При нажатии на этот элемент Вы можете посмотреть запланированные мероприятия по регионам.\": \"Осы элементті басқан кезде сіз жоспарланған іс-шараларды аймақтар бойынша көре аласыз.\",\n            \"При нажатии на этот элемент Вы можете сменить язык сайта.\": \"Бұл элементті басқан кезде сіз сайттың тілін өзгерте аласыз.\",\n            \"Это рабочий стол. На нём располагаются папки и файлы с контентом.\": \"Бұл жұмыс үстелі. Онда қалталар мен мазмұны бар файлдар бар.\",\n            \"Это папка. Вы можете открыть её двойным нажатием.\": \"Бұл қалта. Сіз оны екі рет басу арқылы аша аласыз.\",\n            \"При нажатии на этот элемент Вы можете увидеть ссылки на наши социальные сети.\": \"Бұл элементті басу арқылы сіз біздің әлеуметтік желілерге сілтемелерді көре аласыз.\",\n            \"При нажатии на этот элемент Вы можете посмотреть последние новости.\": \"Бұл элементті басу арқылы сіз соңғы жаңалықтарды көре аласыз.\",\n            \"Это документ office. Вы можете открыть его двойным нажатием и посмотреть содержимое, скачать, распечатать.\": \"Бұл office құжаты. Сіз оны екі рет басу арқылы ашып, мазмұнын қарауға, жүктеуге, басып шығаруға болады.\",\n            \"Это панель инструментов. На ней располагается навигация по сайту.\": \"Бұл құралдар тақтасы. Ол сайттың навигациясын қамтиды.\",\n            \"Это поиск по сайту. При нажатии на него, откроется поиск с помощью которого Вы легко сможете найти нужный контент на сайте.\": \"Бұл сайттағы іздеу құралы. Сіз оны басқан кезде сайтта қажетті мазмұнды оңай табуға болатын іздеу ашылады.\",\n        }\n    }\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: \"ru\", // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\n        // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\n        // if you're using a language detector, do not define the lng option\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport './i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}